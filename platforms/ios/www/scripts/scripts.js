"use strict";angular.module("config",[]).constant("ENV",{name:"production",apiEndpoint:"http://api.yoursite.com/"});var boom=angular.module("boom",["ui.router","boom.repositories","boom.plp"]);angular.module("boom.plp",[]),angular.module("boom.repositories",[]),boom.config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("container",{url:"/",views:{"header@":{templateUrl:"templates/header.html"},"plp@":{templateUrl:"templates/plp.html",controller:"plpCtrl"}}})}]),angular.module("boom.plp").controller("plpCtrl",["$scope","categoryRepository",function(a,b){a.categories=[],function(){b.all().then(function(b){a.categories=b.data})}()}]),angular.module("boom.repositories").factory("dishRepository",["$http",function(a){var b=function(){return a.get("test_data/dishes.json")};return{all:b}}]),angular.module("boom.repositories").factory("categoryRepository",["$http","dishRepository",function(a,b){function c(){return a.get("test_data/categories.json").then(d)}function d(a){return b.all().then(function(b){angular.forEach(a.data,function(a){a.dishes=[],angular.forEach(b.data,function(b){b.category_id===a.id&&a.dishes.push(b)})})}),a}return{all:c}}]);